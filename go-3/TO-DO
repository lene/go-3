
	TO DO LIST for go3d on 6 Feb 2006
	==================================


	1) Short-term
	-------------

implement read() and write() routines for the Protocols, which acknowledge the 
read command by repeating it, and repeat the written command if it is not
acknowledged

1.6 user and installation documentation					(doc)

startup scripts

buggy reconnecting of clients - deadlock if current player disconnects

settings dialog at startup:						(feature)
	set board size
	leave room for setting of handicaps, number of players,
		load game, etc.

class hierarchy: derive a Server(Game) and a client class separately from GoGrid
the Server defines the method nextPlayer(), the client message()

disentangle the protocol from the server/client implementation

GoGridClient.java has to be cleaned up major league

define and document the protocol somewhere...

revamp protocol

revamp message syntax

find a way to use the transparency (and other properties) setting functions in
all Shape3D or Sphere derived objects (i want multiple inheritance! )-:
ie. Cursor, Grid/GridObject, Stone, Point, Handicap

bug when setting into a field with no liberties left: the SETTING player is 
cleared (at least sometimes)

bug when player 0 disconnects

when game starts (perhaps on other occasions before starting), the cursor is set
to 0,0,0.

--------------------------------------------------->	ALPHA RELEASE

	2) Beta-release
	---------------

players should be changed from ints to Player objects throughout
	
display the captured stones in the background, along with their number

recheck protocol - what instances can occur?				(code)

check for deadlocks							(code)

clearArea () code - where's the bug?					(bugfix)

display correctly after (re-)connecting					(bugfix)

calculation af rotation angles from Transform3D				(bugfix)

command line for clients to manually type commands			(feature)
	done for non-graphical client; the graphical needs an interface

talk window, chat & messages line					(feature)

Picking: 								(bugfix)
	  better transform inverse (see transformation behaviors) 
	  enable picking for occupied points 
	  remove pick cursor, it is confusing				

Multithreaded server spawning new game instances

connection window displays games running on server with sizes; possibility
to join open games

saving and restoring games

--------------------------------------------------->	BETA RELEASE


	3) First release
	----------------

fix all remaining bugs
	[xyz]set in J3DApp should show last move

profile code and optimize hotspots


	4) Mid-term
	-----------

user management 

base class call in protocol classes -> derived classes			(code)

GridDisplay extends GoGridClient					(code)

add a control window							(feature)

	finally:controls to manipulate the board
		moving the cursor
		setting
		chat & messages line
		get & display liberties
		visual depth?

integrate display, control window and talk line into one frame		(hmm.. usability feat)

Cursor: change color according to what's under the cursor as well 	?

Separate functionalities - grid (setting, getting, checking, 		(code)
liberties, the like), actual implementation (server/client),
integration with graphics

One-player-game (with better computer opponent, possibly)		(feature)

add a context menu							(feature)
	file 
		load game 
		save game 
		new game 
			connect to/disconnect from server 
			start server 
			play against computer 
		quit 
	settings 
		show/hide controls 
		options 
	appearance 
		show/hide grid 
		show/hide handicap marks 
		antialiasing on/off
		fog on/off
		smooth/coarse spheres 
		transparency on/off
		background
	help 
		online help 
		about

handicap markers: tiny coarse spheres istead of tetheds			("bug"fix)

rendering improvements/adjustments					(feature)
	lighting on/off 
	material -> color info 
	adjustable depth of perspective 

count captives								(feature)



	5) Long-term
	------------

count eyes								

Better, more intelligent computer player 				

cursor for lines and planes 						

cut away or fade parts of the grid for better orientation 		

undo capability and forking of the game					

logging of games, preferably to MySQL database, for analysis

server-side setting of multiple cursors					PREPARED

server-side graphical display w/ multiple cursors			
	+ hooking into running games

fly-through mode							

multiple views 								

more players 								

different sizes in x, y and z						PREPARED

different geometries:							
	toroidal space (in 1, 2 or 3 dimensions)			
	4D?!								
	tetrahedral or dodecahedral (or what else?) connections		


	6) Ongoing work
	===============

write javadoc info							(doc)
	GoGrid classes
	the other classes too

remove remaining sloppiness in code:					(code)
	names of classes and methods
	names of the getters and setters

jar-distribution, packaging						(feature)
