#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#

GITLAB_PROJECT_ID=6643214

status=0


if [ -n "${GITLAB_ACCESS_TOKEN}" ]; then
  CONTENT="$(cat .gitlab-ci.yml)"
  jq --null-input --arg yaml "$CONTENT" '.content=$yaml' | \
  curl -s "https://gitlab.com/api/v4/projects/${GITLAB_PROJECT_ID}/ci/lint" \
    --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: $GITLAB_ACCESS_TOKEN" \
    --data @- | \
    jq .valid | grep true || status=1
else
  echo "please export GITLAB_ACCESS_TOKEN"
  exit 1
fi
echo "status after gitlab lint: $status"

sbt test || status=1
echo "status after sbt test: $status"

VERSION=$(grep 'version :=' build.sbt | cut -d '"' -f 2)
docker build --build-arg version="$VERSION" -t test_image . || status=1
echo "status after docker build: $status"

if [ $status -gt 0 ]; then
  commit_msg=$(git log --oneline | head -n 1 | cut -d' ' -f 2-)
  if echo "$commit_msg" | grep '^WIP:'; then
    echo >&2 "Found WIP commit, pushing in spite of failed test suite"
    status=0
  fi
fi

exit $status
